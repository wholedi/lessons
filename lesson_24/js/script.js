"use strict"

// Задача №1
// Що потрапить в консоль?
//
let someVar = 0;
++someVar;

if (someVar) {
    console.log(someVar);
}

//1. Почнемо з того, що виконується присвоєння змінній someVar значення 0.
//2. Потім через інкремент змінна someVar збільшується на 1, тобто змінна someVar буде мати значення 1.
//3. Далі у нас є умова: "Якщо someVar існує і відповідає значенню true, то вивести в консоль значення змінної someVar".
// Ми вже знаємо, що false - це 0, null, undefined, NaN, пуста строка. Всі інші значення будуть true.
// Тому умова виконається і в консоль виведеться 1.

// ---------------------------------------------------------------------------------------------------------------------
// Задача №2
// За допомогою циклу FOR виведіть в консоль 10 рядків:
// Пункт №1
// Пункт №2
// і т.д.

// 1. Створюємо цикл, який буде виконуватися 10 разів .
// Вказуємо, що змінна i буде починатися з 1, і вказуємо, якщо i менше або дорівнює 10, то кожен цикл через
// інкремент до змінної буде додаватись 1.
// 2. Виводимо в консоль строку "Пункт №" + значення змінної i.

for (let i = 1; i <= 10; i++) {
    console.log("Пункт №" + i);
}
// ---------------------------------------------------------------------------------------------------------------------

// Задача №3
// Що потрапить в консоль ?
if (2 * 20 <= 10 || 30 / 2 < 5 && 10 <= "10" || 20 === "20") {
    console.log('000');
}

// 2 * 20 <= 10 - 2 * 20 рівне 40, що не менше і не дорівнює 10. Умова не виконується - false.

// 30 / 2 < 5 - 30 / 2 рівне 15, що менше 5. Умова не виконується - false.

// 10 <= "10" - порівняння числа 10 з рядком "10". (при порівнянні ці оператори < > == != переводять тип
// данних з рядка на число)
// Тому ця умова виконується - true

// 20 === "20" - порівняння числа 20 з рядком "20". Типи даних різні. Умова не виконується - false.
// === !== ці оператори не переводять рядок в число, це так званні оператори суворого порівняння

//Отже, лише друга умова 10 <= "10" є true.

// if (false || false && true || false) {
//     console.log('000');
// }

// Перший крок – оператори && обчислюються перед операторами ||.
// Тому спочатку оцінюється false && true, тому що це логічне ТА, яке має вищий пріоритет.
// false && true -  наше ТА означає, що обидва операнди повинні бути true, щоб результат був true.
// В даному випадку один з операндів - false, тому результат цієї частини виразу дорівнює false.

// Тепер вираз виглядає так: (false || false || false).
// Оператор || (логічне АБО) повертає true, якщо хоча б один з його операндів true.
// Оскільки всі операнди false, результат висловлювання false || false || false дорівнює false.
// Отже, весь вираз (false || false & true || false) оцінюється як false.

// В результаті, рядок '000' не буде виведений у консоль.

// ---------------------------------------------------------------------------------------------------------------------

// Задача №4
// Створіть функцію, яка повертає результат ділення числа a на число b з додаванням рядка "Результат ділення: "
// Викличте функцію передаючі різні значення, у тому числі не передаючи зовсім.
// Функція не має повертати NaN, Infinite або помилку

function calcDivision(a, b) {
    if (b === 0) {
        return "На нуль ділити не можна";
    } else if (a === undefined || b === undefined) {
        return "Введіть значення";
    } else if (isNaN(a) || isNaN(b)) {
        return "Неправильний формат числа";
    } else {
        return "Результат ділення: " + a / b;
    }
}

console.log(calcDivision(10, 0)); // На нуль ділити не можна
console.log(calcDivision(10)); // Введіть значення
console.log(calcDivision(10, "abc")); // Неправильний формат числа
console.log(calcDivision(10, 5)); // Результат ділення: 2
console.log(calcDivision()); // Введіть значення

// Отже, почнемо з того, що я створила функцію calcDivision, яка приймає два параметри a і b.
// Далі я вказую умови, які будуть виконуватися, якщо будуть виконуватися певні умови.
// Якщо b буде дорівнювати 0, то вивести в консоль "На нуль ділити не можна".
// Якщо a або b будуть дорівнювати undefined, то вивести в консоль "Введіть значення".
// Якщо a або b будуть не числом, то вивести в консоль "Неправильний формат числа".
// Якщо жодна з умов не виконається, то вивести в консоль "Результат ділення: " + a / b.
// Далі я викликаю функцію calcDivision і передаю різні значення.

// ---------------------------------------------------------------------------------------------------------------------
// Задача №5
// Створіть масив даних - 5 елементів, один з яких число 10
// Обробіть масив за допомогою методу перебору
// Перевіряйте елемент на відповідність числу 10, та у разі відповідності, виводьте в консоль

let someArray = [21, true, "Cat", 4, 10];
for (let i = 0; i < someArray.length; i++) {
    if (someArray[i] === 10) {
        console.log(someArray[i]);
    }
}

// це перший варінт перебору масиву, ми використовуємо цикл for, по типу як використовували у завданні №2.
// Тільки тут ми вказуємо, що цикл буде виконуватися поки буде менше довжини масиву
// (тобто поки буде менше 5 елементів, бо масив починається з 0).
// далі я прописую умову, що якщо елемент масиву буде строго дорівнювати 10, то вивести його в консоль.

let arr = [21, true, "Cat", 4, 10];
arr.forEach(item => {
    if (item === 10) {
        console.log(item);
    }
})

// це другий варінт перебору масиву, тільки тут я використовую метод forEach який в данному випадку підходить краще.

